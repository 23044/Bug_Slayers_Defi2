# Generated by Django 5.1.7 on 2025-03-16 14:31

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('target_words', models.IntegerField(default=1000)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('completed_words', models.IntegerField(default=0)),
                ('progress_percentage', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
            ],
        ),
        migrations.CreateModel(
            name='ImportedDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='documents/')),
                ('status', models.CharField(choices=[('pending', 'En attente de traitement'), ('processing', 'En cours de traitement'), ('completed', 'Traitement terminé'), ('error', 'Erreur')], default='pending', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('unknown_words', models.JSONField(default=list)),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='UserContribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0)),
                ('words_contributed', models.IntegerField(default=0)),
                ('words_approved', models.IntegerField(default=0)),
                ('last_contribution', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=1)),
                ('badges', models.JSONField(default=list)),
                ('words_contributed', models.IntegerField(default=0)),
                ('words_approved', models.IntegerField(default=0)),
                ('challenge_words_contributed', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('definition', models.TextField()),
                ('examples', models.JSONField(default=list)),
                ('variants', models.JSONField(default=list)),
                ('word_type', models.CharField(choices=[('root', 'Mot racine'), ('derived', 'Mot dérivé')], default='derived', max_length=10)),
                ('is_challenge_word', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('review', 'En révision'), ('approved', 'Approuvé'), ('rejected', 'Rejeté')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vote_count', models.IntegerField(default=0)),
                ('contributor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contributed_words', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='dictionary.word')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='WordVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dictionary.word')),
            ],
            options={
                'unique_together': {('user', 'word')},
            },
        ),
        migrations.AddField(
            model_name='word',
            name='votes',
            field=models.ManyToManyField(related_name='voted_words', through='dictionary.WordVote', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='word',
            index=models.Index(fields=['word'], name='dictionary__word_cf71b0_idx'),
        ),
        migrations.AddIndex(
            model_name='word',
            index=models.Index(fields=['status'], name='dictionary__status_e1b239_idx'),
        ),
        migrations.AddIndex(
            model_name='word',
            index=models.Index(fields=['word_type'], name='dictionary__word_ty_e36b2c_idx'),
        ),
    ]
